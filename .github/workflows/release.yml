name: Release

on:
  push:
    tags:
      - 'v*'  # Only trigger on version tags (v1.0.0, v2.1.3, etc.)
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # For creating releases
  packages: write  # For pushing to GitHub Container Registry

env:
  GO_VERSION: '1.25'

jobs:
  build-binaries:
    name: Build Linux Binaries (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Build
      env:
        GOOS: linux
        GOARCH: ${{ matrix.arch }}
      run: |
        CGO_ENABLED=0 go build -ldflags="-s -w" -o miniflux-luma
        upx --best -q miniflux-luma
        
        mkdir -p release
        mv miniflux-luma "release/miniflux-luma-linux-${{ matrix.arch }}"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: release/
        if-no-files-found: error
        retention-days: 1

  create-release:
    name: Create Release
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: release/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: release/*
        generate_release_notes: true
        draft: false
        prerelease: false

  docker:
    name: Build and Push Docker Image
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,format=long

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
